package com.atguigu.mobileplayer;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.VideoView;

import com.atguigu.mobileplayer.Utils.Utils;

import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * 作者：杨光福 on 2016/4/20 16:29
 * 微信：yangguangfu520
 * QQ号：541433511
 * 作用：xxxx
 */
public class SystemVideoPlayer extends Activity implements View.OnClickListener {

    /**
     * 视频的进度跟新
     */
    private static final int PROGRESS = 1;
    private Uri uri;
    private VideoView videview;
    private LinearLayout llTop;
    private TextView tvName;
    private ImageView ivBattery;
    private TextView tvTime;
    private Button btnVideoVoice;
    private SeekBar seekBarVoice;
    private Button btnVideoSwitchPlayer;
    private LinearLayout llBottom;
    private TextView btnCurrentTime;
    private SeekBar seekBarVideo;
    private TextView tvDuration;
    private Button btnVideoExit;
    private Button btnVideoPre;
    private Button btnVideoStartPause;
    private Button btnVideoNext;
    private Button btnVideoSwitchScreen;
    private Utils utils;
    private MyReceiver receiver;

    /**
     * Find the Views in the layout<br />
     * <br />
     * Auto-created on 2016-04-22 10:51:42 by Android Layout Finder
     * (http://www.buzzingandroid.com/tools/android-layout-finder)
     */
    private void findViews() {
        videview = (VideoView) findViewById(R.id.videview);
        llTop = (LinearLayout)findViewById( R.id.ll_top );
        tvName = (TextView)findViewById( R.id.tv_name );
        ivBattery = (ImageView)findViewById( R.id.iv_battery );
        tvTime = (TextView)findViewById( R.id.tv_time );
        btnVideoVoice = (Button)findViewById( R.id.btn_video_voice );
        seekBarVoice = (SeekBar)findViewById( R.id.seekBar_voice );
        btnVideoSwitchPlayer = (Button)findViewById( R.id.btn_video_switch_player );
        llBottom = (LinearLayout)findViewById( R.id.ll_bottom );
        btnCurrentTime = (TextView)findViewById( R.id.btn_current_time );
        seekBarVideo = (SeekBar)findViewById( R.id.seekBar_video );
        tvDuration = (TextView)findViewById( R.id.tv_duration );
        btnVideoExit = (Button)findViewById( R.id.btn_video_exit );
        btnVideoPre = (Button)findViewById( R.id.btn_video_pre );
        btnVideoStartPause = (Button)findViewById( R.id.btn_video_start_pause );
        btnVideoNext = (Button)findViewById( R.id.btn_video_next );
        btnVideoSwitchScreen = (Button)findViewById( R.id.btn_video_switch_screen );

        btnVideoVoice.setOnClickListener( this );
        btnVideoSwitchPlayer.setOnClickListener( this );
        btnVideoExit.setOnClickListener( this );
        btnVideoPre.setOnClickListener( this );
        btnVideoStartPause.setOnClickListener( this );
        btnVideoNext.setOnClickListener( this );
        btnVideoSwitchScreen.setOnClickListener( this );
    }

    private Handler handler = new Handler(){
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what){
                case PROGRESS://视频更新的消息

                    int currentPosition  = videview.getCurrentPosition();

                    seekBarVideo.setProgress(currentPosition);



                    //设置当前的时间
                    btnCurrentTime.setText(utils.stringForTime(currentPosition));


                    //设置系统时间
                    tvTime.setText(getSystemTime());

                    handler.sendEmptyMessageDelayed(PROGRESS, 1000);

                    break;
            }
        }
    };

    /**
     * 得到系统时间
     * @return
     */
    private String getSystemTime() {
        SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
        return format.format(new Date());
    }

    /**
     * Handle button click events<br />
     * <br />
     * Auto-created on 2016-04-22 10:51:42 by Android Layout Finder
     * (http://www.buzzingandroid.com/tools/android-layout-finder)
     */
    @Override
    public void onClick(View v) {
        if ( v == btnVideoVoice ) {
            // Handle clicks for btnVideoVoice
        } else if ( v == btnVideoSwitchPlayer ) {
            // Handle clicks for btnVideoSwitchPlayer
        } else if ( v == btnVideoExit ) {
            // Handle clicks for btnVideoExit
        } else if ( v == btnVideoPre ) {
            // Handle clicks for btnVideoPre
        } else if ( v == btnVideoStartPause ) {
            if(videview.isPlaying()){
                //暂停
                videview.pause();
                //按钮状态要设置播放
                btnVideoStartPause.setBackgroundResource(R.drawable.btn_video_start_selector);
            }else{
                //播放
                videview.start();
                //设置按钮状态暂停
                btnVideoStartPause.setBackgroundResource(R.drawable.btn_video_pause_selector);
            }
            // Handle clicks for btnVideoStartPause
        } else if ( v == btnVideoNext ) {
            // Handle clicks for btnVideoNext
        } else if ( v == btnVideoSwitchScreen ) {
            // Handle clicks for btnVideoSwitchScreen
        }
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        System.out.println("SystemVideoPlayer--onCreate");
        setContentView(R.layout.activity_system_video_player);

        initData();

        findViews();

        uri = getIntent().getData();
        setListener();


        //设置播放地址
        videview.setVideoURI(uri);



        //设置控制面板
//        videview.setMediaController(new MediaController(this));
    }

    private void initData() {
        utils = new Utils();

        //注册监听电量广播
        receiver = new MyReceiver();
        IntentFilter intentfilter = new IntentFilter();
        intentfilter.addAction(Intent.ACTION_BATTERY_CHANGED);
        registerReceiver(receiver, intentfilter);
    }

    private void setListener() {
        //设置监听
        //准备好的监听
        videview.setOnPreparedListener(new MyOnPreparedListener());
        //监听播放出错
        videview.setOnErrorListener(new MyOnErrorListener());
        //监听监听播放完成
        videview.setOnCompletionListener(new MyOnCompletionListener());

        //设置视频拖动监听
        seekBarVideo.setOnSeekBarChangeListener(new MyOnSeekBarChangeListener());
    }

    class MyOnSeekBarChangeListener implements SeekBar.OnSeekBarChangeListener {

        /**
         * 当状态变化的时候回调这个方法
         * @param seekBar
         * @param progress 当前进度
         * @param fromUser 不是人为改变的时候就是false,人为改变的是true
         */
        @Override
        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
            if(fromUser){
                videview.seekTo(progress);
            }

        }

        /**
         * 当手指第一次触碰的时候回调这个方法
         * @param seekBar
         */
        @Override
        public void onStartTrackingTouch(SeekBar seekBar) {

        }

        /**
         * 当手指离开SeeKbar的时候回调这方法
         * @param seekBar
         */
        @Override
        public void onStopTrackingTouch(SeekBar seekBar) {

        }
    }

    @Override
    protected void onStart() {
        super.onStart();
        System.out.println("SystemVideoPlayer--onStart");
    }


    @Override
    protected void onRestart() {
        super.onRestart();
        System.out.println("SystemVideoPlayer--onRestart");
    }

    @Override
    protected void onResume() {
        super.onResume();
        System.out.println("SystemVideoPlayer--onResume");
    }

    @Override
    protected void onPause() {
        super.onPause();
        System.out.println("SystemVideoPlayer--onPause");
    }

    @Override
    protected void onStop() {
        super.onStop();
        System.out.println("SystemVideoPlayer--onStop");
    }

    @Override
    protected void onDestroy() {

        System.out.println("SystemVideoPlayer--onDestroy");
        handler.removeCallbacksAndMessages(null);

        //取消监听
        if(receiver != null){
            unregisterReceiver(receiver);
            receiver = null;
        }

        super.onDestroy();
    }

    class MyOnPreparedListener implements MediaPlayer.OnPreparedListener {

        @Override
        public void onPrepared(MediaPlayer mp) {
            videview.start();

            //设置SeekBar.setMax();
            int duration = videview.getDuration();
            seekBarVideo.setMax(duration);

            //设置总时长
            tvDuration.setText(utils.stringForTime(duration));

            //发消息更新视频的进度
            handler.sendEmptyMessage(PROGRESS);
        }
    }
    class MyOnErrorListener implements MediaPlayer.OnErrorListener {

        @Override
        public boolean onError(MediaPlayer mp, int what, int extra) {
            Toast.makeText(SystemVideoPlayer.this,"播放出错了",Toast.LENGTH_SHORT).show();
            return true;
        }
    }

    class MyOnCompletionListener implements MediaPlayer.OnCompletionListener {

        @Override
        public void onCompletion(MediaPlayer mp) {
            //退出播放器或者播放下一个
            finish();
        }
    }

    class MyReceiver extends BroadcastReceiver{

        @Override
        public void onReceive(Context context, Intent intent) {
            int level = intent.getIntExtra("level",0);//电量值：0~100
            //在主线程中执行
            setBattey(level);
        }
    }

    /**
     * 设置电量状态
     * @param level
     */
    private void setBattey(int level) {
        if (level <= 0) {
            ivBattery.setImageResource(R.drawable.ic_battery_0);
        } else if (level <= 10) {
            ivBattery.setImageResource(R.drawable.ic_battery_10);
        } else if (level <= 20) {
            ivBattery.setImageResource(R.drawable.ic_battery_20);
        }else if (level <= 40) {
            ivBattery.setImageResource(R.drawable.ic_battery_40);
        }else if (level <= 60) {
            ivBattery.setImageResource(R.drawable.ic_battery_60);
        }else if (level <= 80) {
            ivBattery.setImageResource(R.drawable.ic_battery_80);
        }else if (level <= 100) {
            ivBattery.setImageResource(R.drawable.ic_battery_100);
        }else {
            ivBattery.setImageResource(R.drawable.ic_battery_100);
        }
    }
}
